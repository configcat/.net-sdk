# editorconfig.org

# top-most EditorConfig file
root = true

# Default settings:
# A newline ending every file
# Use 4 spaces as indentation
[*]
insert_final_newline = true
indent_style = space
indent_size = 4
trim_trailing_whitespace = true
max_line_length = 160

# Generated code
[*{_AssemblyInfo.cs}]
generated_code = true

# C# files
[*.cs]
charset = utf-8

# Whitespace / Expression-level preferences
dotnet_style_operator_placement_when_wrapping = beginning_of_line

# Whitespace / Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current

# Whitespace / New line preferences (Allman indentation style)
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Whitespace / Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Whitespace / Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

# Code Style / 'using' directive preferences
csharp_using_directive_placement = outside_namespace:suggestion
dotnet_sort_system_directives_first = true

# Code Style / Code-block preferences
csharp_prefer_simple_using_statement = false:none
csharp_prefer_braces = when_multiline:warning
csharp_style_namespace_declarations = file_scoped:warning
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent

# Code Style / Expression-bodied members
csharp_style_expression_bodied_methods = true:silent
csharp_style_expression_bodied_constructors = true:silent
csharp_style_expression_bodied_operators = true:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = true:silent

# Code Style / Expression-level preferences
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_namespace_match_folder = true:silent
csharp_style_throw_expression = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_prefer_local_over_anonymous_function = false:none
csharp_style_prefer_index_operator = false:none
csharp_style_prefer_range_operator = false:none
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_tuple_swap = false:none
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# Code Style / Field preferences
dotnet_style_readonly_field = true:warning

# Code Style / Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Code Style / Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
csharp_prefer_static_local_function = true:warning
csharp_style_prefer_readonly_struct = true:suggestion
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:warning

# Code Style / New line preferences
dotnet_style_allow_multiple_blank_lines_experimental = false:warning
dotnet_style_allow_statement_immediately_after_block_experimental = true:silent
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent

# Code Style / Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Code Style / Parameter preferences
dotnet_code_quality_unused_parameters = all:suggestion

# Code Style / Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

# Code Style / Pattern matching preferences
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion

# Code Style / this. and Me. preferences
dotnet_style_qualification_for_field = true:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

# Code Style / var preferences
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = false:none

# Naming Style / Styles

dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style.begins_with_i.capitalization = pascal_case
dotnet_naming_style.begins_with_i.required_prefix = I

dotnet_naming_style.begins_with_t.capitalization = pascal_case
dotnet_naming_style.begins_with_t.required_prefix = T

# Naming Style / Symbols

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = *

dotnet_naming_symbols.type_parameter.applicable_kinds = type_parameter
dotnet_naming_symbols.type_parameter.applicable_accessibilities = *

dotnet_naming_symbols.const_field.applicable_kinds = field
dotnet_naming_symbols.const_field.applicable_accessibilities = *
dotnet_naming_symbols.const_field.required_modifiers = const

dotnet_naming_symbols.private_static_field.applicable_kinds = field
dotnet_naming_symbols.private_static_field.applicable_accessibilities = private, internal, private_protected
dotnet_naming_symbols.private_static_field.required_modifiers = static

dotnet_naming_symbols.private_field.applicable_kinds = field
dotnet_naming_symbols.private_field.applicable_accessibilities = private, internal, private_protected

dotnet_naming_symbols.parameter_and_local.applicable_kinds = parameter, local
dotnet_naming_symbols.parameter_and_local.applicable_accessibilities = *

dotnet_naming_symbols.all_symbols.applicable_kinds = *
dotnet_naming_symbols.all_symbols.applicable_accessibilities = *

# Naming Style / Rules

dotnet_naming_rule.interfaces.severity = warning
dotnet_naming_rule.interfaces.symbols = interface
dotnet_naming_rule.interfaces.style = begins_with_i

dotnet_naming_rule.type_parameters.severity = warning
dotnet_naming_rule.type_parameters.symbols = type_parameter
dotnet_naming_rule.type_parameters.style = begins_with_t

dotnet_naming_rule.const_fields.severity = warning
dotnet_naming_rule.const_fields.symbols = const_field
dotnet_naming_rule.const_fields.style = pascal_case

dotnet_naming_rule.private_static_fields.severity = warning
dotnet_naming_rule.private_static_fields.symbols = private_static_field
dotnet_naming_rule.private_static_fields.style = pascal_case

dotnet_naming_rule.private_fields.severity = warning
dotnet_naming_rule.private_fields.symbols = private_field
dotnet_naming_rule.private_fields.style = camel_case

dotnet_naming_rule.parameters_and_locals.severity = warning
dotnet_naming_rule.parameters_and_locals.symbols = parameter_and_local
dotnet_naming_rule.parameters_and_locals.style = camel_case

dotnet_naming_rule.everything_else.severity = warning
dotnet_naming_rule.everything_else.symbols = all_symbols
dotnet_naming_rule.everything_else.style = pascal_case

# Analyzers 

# CAC001: ConfigureAwaitChecker
dotnet_diagnostic.CAC001.severity = warning

# IDE0011: Add braces (csharp_prefer_braces)
dotnet_diagnostic.IDE0011.severity = warning

# IDE0035: Remove unreachable code
dotnet_diagnostic.IDE0035.severity = warning

# IDE0040: Add accessibility modifiers (dotnet_style_require_accessibility_modifiers)
dotnet_diagnostic.IDE0040.severity = warning

# IDE0044: Make field read-only (dotnet_style_readonly_field)
dotnet_diagnostic.IDE0044.severity = warning

# IDE0051: Remove unused private member
dotnet_diagnostic.IDE0051.severity = warning

# IDE0052: Remove unread private member
dotnet_diagnostic.IDE0052.severity = warning

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = warning

# IDE0059: Unnecessary assignment to a value (csharp_style_unused_value_assignment_preference)
dotnet_diagnostic.IDE0059.severity = warning

# IDE0060: Remove unused parameter (dotnet_code_quality_unused_parameters)
dotnet_diagnostic.IDE0060.severity = warning

# IDE0062: Local function can be made static (csharp_prefer_static_local_function)
dotnet_diagnostic.IDE0062.severity = warning

# IDE0161: Convert to file-scoped namespace (csharp_style_namespace_declarations)
dotnet_diagnostic.IDE0161.severity = warning

# IDE2000: Avoid multiple blank lines (dotnet_style_allow_multiple_blank_lines_experimental)
dotnet_diagnostic.IDE2000.severity = warning

# CA1822: Make member static
dotnet_diagnostic.CA1822.severity = warning

# Xml project files
[*.{csproj,proj}]
charset = utf-8
indent_size = 2

[*.{csproj,proj}]
charset = utf-8

# Xml files
[*.{xml,stylecop,resx,ruleset}]
charset = utf-8
indent_size = 2

# Xml config files
[*.{props,targets,config,nuspec}]
charset = utf-8
indent_size = 2

# YAML config files
[*.{yml,yaml}]
charset = utf-8
indent_size = 2

# Shell scripts
[*.sh]
end_of_line = lf

[*.{cmd,bat}]
end_of_line = crlf
